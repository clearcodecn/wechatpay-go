// Copyright The Wechat Pay Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package sign

import (
	"testing"
)

func TestLoadRSAPrivateKeyFromTxt(t *testing.T) {
	privateKey, err := LoadRSAPrivateKeyFromTxt(mockRSAPrivateKeyCert)
	if err != nil {
		t.Fatal(err)
	}

	expect := "21420464488684196166133246342556659636550593370148748831102541581055400283034358001792168425545200813983192883572960524746874583639926463744817032344327797479417553360454010600259473981755446176276791560274198974049554918857785979093044935805583861562312917387112389597175890991416299121425504032865468169023321187470378144804054107007826722660772241802037293444028379616716611420761841023299077453591435611852308858738362465482152136667219327839959299377797228243297859693630646114090882339966320817036494553227805348660968120598764552671360953337161474984336270587583567150172241067256189055044836175172103951120193"
	actual := privateKey.N.String()
	if actual != expect {
		t.Fatalf("expect %s, got %s", expect, actual)
	}
}

func TestLoadRSAPublicKey(t *testing.T) {
	buffer := []byte(mockRSAPublicKeyCert)
	publicKey, err := LoadRSAPublicKeyFromCert(buffer)
	if err != nil {
		t.Fatal(err)
	}

	expect := "21420464488684196166133246342556659636550593370148748831102541581055400283034358001792168425545200813983192883572960524746874583639926463744817032344327797479417553360454010600259473981755446176276791560274198974049554918857785979093044935805583861562312917387112389597175890991416299121425504032865468169023321187470378144804054107007826722660772241802037293444028379616716611420761841023299077453591435611852308858738362465482152136667219327839959299377797228243297859693630646114090882339966320817036494553227805348660968120598764552671360953337161474984336270587583567150172241067256189055044836175172103951120193"
	actual := publicKey.N.String()
	if actual != expect {
		t.Fatalf("expect %s, got %s", expect, actual)
	}
}

const mockRSAPrivateKeyCert = `-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCprsmcXPHqLtnP
oPDGUoMULK2WOo5FW8c72Svnqn/4aXPaJhlOtPxtX2frqIhTjwcOs6hNm3XFTGBL
MrdB94YQvj+Q7P12GNmxXG+9Ms+uUyJToYjlYDAG6UFKE10Jkm9cDGuLSkekU1Ao
rKE1G1wndH37w4AzVXoGBQ3NIiyW8jIm8Zi3/WNCVpHUoXYUuyhFEZ23fXytnps4
hARgg6NvPncIKtWvlUh85ZVOSsqc1T8dFaeDRXaj7r3jdJJ74tsGRMvZyUipJXyE
3uR2QkrGyia+0phDpC6zeMMpP+MQO9ohh+xQWBCeyvQjjnOPAlGThl+ThfXImU30
HL17oHdBAgMBAAECggEADm6FSz1Efgx6DgS8NcHy0BZ0tSBJ1XBW46o2579Cnxgo
+FbhNCaEibDhn9N3tNOnYAK7v84HGD7EueCYYY3x4x6rPWJKtG6spT8dadQWgdck
RkSo5glmTFAuc2RuN1AzFHsh8njg2wMTAEKee2vWTKzFwlIAZ11PwY9Qey/65uOT
Bi8q1Rssu6xofNadO5MbqMJ1Tl8DDIaLGnzTzbHrk9thBUo1FwFjJWTVI7nz2En4
Yc/G1/LQJfiQ31F+lkL3j6ABRJqtsgb07r9H/hT6+fd1hGDt2qKuS+E1mLDp9fHw
n6UyS4HyB7DA/XtFZ9z0VtAlmcGoUkyJLtXjEmwsGQKBgQDeCtE3spULpC7VPqk1
xv034C6zybZ7y8kSKwRvyYwkzdgSRgVaKsTVb8RNYor8hoGrVgdXFqQUI8O/v1cN
9wFoGYJT0LHre/YzOg31TkQkBfHHCFH/L50uOJcIQueftctz5Bwj6bJO/ih5iIAK
yjrHse4PdIiEJfz2D9hc4wnxrwKBgQDDogrWlUCTj2fvmZfkWR3Hbs0kIHd7zjIk
bJJONGtD8gE4i562tajC1mKoQEwt4YSwWsBkGAw1LhvMROQFT6AOaIIhHNex1Z3t
c2gAdEeWOMmzZnnhwWzTiYJomixrFkmEwT3EJK89GO3E0FH5S+G1P1tNXq38Vpty
1YVqOgMSDwKBgFrzuWGEQDMljJ2C7lL98KlbpiW1AY/SGMndXxLfTw2gV9qcXgLi
NABtqM4+CEqKWkExmw4cUxeA0uUPXnx06lmW4WCtwsN/4oh3RlJuPdE3siLiEJxk
B5FwUsVqinBMSktta+12A7kBuNiXhkNlNRCpnKcuB+GBog20zd62jVM3AoGBALcA
zFazQ7dFfRq7eUUYwCyhT7Et1dewqWM9VRdnHbhvmAjHQu7zvCyW069Ehn6c6bz3
B+YaQME2orZQ82SsebNAvAoxquwmQhevz2gtXhH+iWASyo0Onbi8d4tWPZrnPFq9
UgQ7tNnYigOEREqKW1drLwOPP/4/Hicr6iPWpKytAoGAEQ6J/RB/olEAC46ACoFo
FBgA+GUbDB0xBcA2inEt3q//208YMkjnKM871n89HpAgms5xrK32T69lduebk7Ar
9wWvkJVUwI9VDXomCFQqtiGzHlTl1Xq31BfeIDyq1ayQmTkRpRqIagbDZVtM+ha/
0I2SEzTObt07wcYcYG2Chvg=
-----END PRIVATE KEY-----`

const mockRSAPublicKeyCert = `-----BEGIN CERTIFICATE-----
MIIDFDCCAfwCCQCa1ZlTrfG6uzANBgkqhkiG9w0BAQUFADBMMQswCQYDVQQGEwJD
TjELMAkGA1UECAwCU0MxCzAJBgNVBAcMAkNEMQowCAYDVQQKDAFUMQowCAYDVQQL
DAFUMQswCQYDVQQDDAJDTjAeFw0yMTAxMjUxMDEzMzBaFw0zMTAxMjMxMDEzMzBa
MEwxCzAJBgNVBAYTAkNOMQswCQYDVQQIDAJTQzELMAkGA1UEBwwCQ0QxCjAIBgNV
BAoMAVQxCjAIBgNVBAsMAVQxCzAJBgNVBAMMAkNOMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEAqa7JnFzx6i7Zz6DwxlKDFCytljqORVvHO9kr56p/+Glz
2iYZTrT8bV9n66iIU48HDrOoTZt1xUxgSzK3QfeGEL4/kOz9dhjZsVxvvTLPrlMi
U6GI5WAwBulBShNdCZJvXAxri0pHpFNQKKyhNRtcJ3R9+8OAM1V6BgUNzSIslvIy
JvGYt/1jQlaR1KF2FLsoRRGdt318rZ6bOIQEYIOjbz53CCrVr5VIfOWVTkrKnNU/
HRWng0V2o+6943SSe+LbBkTL2clIqSV8hN7kdkJKxsomvtKYQ6Qus3jDKT/jEDva
IYfsUFgQnsr0I45zjwJRk4Zfk4X1yJlN9By9e6B3QQIDAQABMA0GCSqGSIb3DQEB
BQUAA4IBAQCILfHUgKMw6DhfaErJ6Gc/qmvNoSxyVsFw4jOC1HvaK/c6rg633Hso
NZBS6et56aTxLbaGyWJDhLnT0NxBhL+B/pSeUbb6jqNVU+xDjy1wEUV14BknM5iI
YoW/kG3rZpdON9OyPEpCX7F46Ivsrdzl+MdSr6+oCOtDm9LtYuR8irxm2x92fUCG
/r05oVhiOX/eYZxQYrmpaqcyE5pwD1CiVmhyeNmhzkt68Z+h0gykacPdYkoLwPrq
G49eef0cMTlQlGn8hFdoN45Jf3wA4+0D7rsROLjj67Kdz2XY/OdGVxmBqrKbmRzA
eofjh+kZhJAh/H+RSEO7LnTgQELm3gFZ
-----END CERTIFICATE-----`
